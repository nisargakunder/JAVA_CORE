package org.bookapp.service.aspect;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.reflect.MethodSignature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

@Component
@Aspect
public class LoggerAspect {
    private static final Logger logger=LoggerFactory.getLogger(LoggerAspect.class);

    @Around("@annotation(org.bookapp.annotation.Loggable)")
    public Object around(ProceedingJoinPoint point) throws Throwable {
        System.out.println("********");
        long start = System.currentTimeMillis();
        Object result = point.proceed();
        long end = System.currentTimeMillis();
        logger.info("Execution time of " + point.getSignature() + " is " + (end - start) + " ms");
         return result;
    }
}