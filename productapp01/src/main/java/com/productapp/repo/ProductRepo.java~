package com.productapp.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;

public interface ProductRepo extends JpaRepository<Product, Integer> {

  @Query("select p from Product p")
  List<Product> getListOfAllProducts();


  @Query("select p from Product p where p.name=?1")
  List<Product> getListOfAllProductsBasedOnName(String name);

  @Query("select p from Product p where p.name=:name")
  List<Product> getListOfAllProductsBasedOnNameV2(@Param("name")  String name);


  @Query("select p from Product p where p.name=?1 and p.price=?2")
  List<Product> getListOfAllProductsBasedOnNameAndPrice(String name, BigDecimal price);

  @Query("select p from Product p where p.name=?1 or p.price=?2")
  List<Product> getListOfAllProductsBasedOnNameOrPrice(String name, BigDecimal price);

  @Query("select p from Product p where p.name=?1")
  List<Product> findByName(String name);
  @Query("select p from Product p where p.name like ?1")
  List<Product> findByNameContaining(String name);
  @Query("select p from Product p where p.name like ?1")
  List<Product> findByNameLike(String name);
  @Query("select p from Product p where p.name like ?1")
  List<Product> findByNameStartingWith(String name);
@Query("select p from Product p where p.name like ?1")
  List<Product> findByNameEndingWith(String name);
@Query("select p from Product p where p.name like ?1")
  List<Product> findByNameIgnoreCase(String name);


@Query("select p from Product p where p.mfgDate=?1")
  List<Product> findByMfgDateAfter(LocalDate date);
  @Query("select p from Product p where p.mfgDate=?1")
  List<Product> findByMfgDateBefore(LocalDate date);
  @Query("select p from Product p where p.mfgDate between ?1 and ?2")
  List<Product> findByMfgDateBetween(LocalDate date1, LocalDate date);



}
